SQL Retrieval for Specific User
The ABC Cab-booking App encountered a peculiar case.
A user with ID 10115 had a series of complaints.
As a data analyst, can you use your SQL skills to retrieve all the complaint details?

Task
Use INNER JOIN.
You can refer to the dataset here.
Expected Output Format
complaint_id
user_id
full_name
category_name


ans.->

select uc.complaint_id, ui.user_id, ui.full_name, cc.category_name from user_complaints uc
inner join complaint_category cc on uc.category_id = cc.category_id
inner join user_information ui on ui.user_id=uc.user_id
where ui.user_id==10115;


Analyze Resolved Cab Complaints SQL
As a data analyst for ABC Cab-booking App, you are tasked with analyzing all the complaints with status as 'resolved' or 'legal action taken'.
You have been provided with two tables: complaint_status and user_complaints.
This analysis will enable you to gain insights into the resolution outcomes and legal actions taken in response to user complaints.
Your findings will contribute to enhancing the overall customer experience and improving the efficiency of complaint management within the ABC Cab-booking App.

Task
Use INNER JOIN.
You can refer to the dataset here.
Expected Output Format
complaint_id
status
subcategory_id

Ans.->
select cs.complaint_id,cs.status, uc.subcategory_id from complaint_status cs
inner join user_complaints uc on cs.complaint_id=uc.complaint_id
where cs.status=="resolved" or cs.status=="legal action taken";


SQL JOINs Cab Complaints Report
You are a customer support representative for the ABC Cab-booking App, which has been facing some user complaints related to rides.
The company provided you with a dataset containing user complaints.

Task
Generate a report that lists all complaints, including those with missing user information.

To accomplish this, you need to join the "user_information" and "user_complaints" tables using a LEFT JOIN and use INNER JOIN for the remaining tables.
Sort by complaint_id.
You can refer to the dataset here.
Expected Output Format
complaint_id
full_name
email
category_name
reason

Ans.->
select uc.complaint_id, ui.full_name,ui.email,cc.category_name,cd.reason
from user_complaints uc 
inner join complaint_category cc on cc.category_id=uc.category_id
inner join category_description cd on uc.subcategory_id=cd.subcategory_id
left join user_information ui on uc.user_id=ui.user_id
order by uc.complaint_id;

Identify Complaint-Free Users SQL Challenge
In the world of the ABC Cab-booking App, there exist a rare breed of users who have never complained about anything.
It's as if they have discovered the secret to eternal cab-booking bliss.
As a data analyst for the app, your mission is to uncover these complaint-free individuals.
By addressing any underlying issues and ensuring a seamless experience for all users, you can contribute to enhancing user satisfaction and retention within the ABC Cab-booking App.

Task
Perform a LEFT JOIN and filter cases where the complaint ID is null.
You can refer to the dataset here.
Expected Output Format
user_id
full_name

ans.->
select ui.user_id, ui.full_name from user_information ui
left join user_complaints uc on ui.user_id=uc.user_id
where uc.complaint_id is null;
